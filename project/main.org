#+TITLE: Page title
#+PROPERTY: header-args:nim :exports both :results output

* Main page for documentation

** String interpolation

*** Strformat

#+begin_src nim
  import strformat

  let varname = "World"
  echo &"Hello {varname}"
  #            ^^^^^^^
  #            |
  #            Identifier must be defined at compile-time

  echo fmt("Some {varname} value\t000") # The same as `&`
  echo fmt"Some {varname} value\t000"
  #    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  #    |
  #    No braces or spaces around string - it will be treated as
  #    raw string literal
#+end_src

#+RESULTS:
: Hello World
: Some World value	000
: Some World value\t000

*** Strtabs

#+begin_src nim
  import strtabs

  let tbl = {"key" : "value"}.newStringTable()
  echo "Hello ${key}" % tbl
  #             ^^^
  #             |
  #             Key can be selected at runtime
#+end_src

#+RESULTS:
: Hello value

*** Strutils

#+begin_src nim
  import strutils

  # Interpolation using indexed placeholders
  echo "$2 $2 some random text $1" % ["hello", "???"]
  #     ^^^^^
  #     |
  #     Can repeat the same placeholder multiple times

  echo "$key1 Some values $key2" % ["key1", "VAL1", "KeY2", "VAL2"]
  #                                 ^^^^^^^^^^^^^^  ^^^^^^
  #                                 |               |
  #                                 |               Comparison in case-insensetive
  #                                 Odd idx - key, even idx - value

  echo format("$1 Hello $1, $2", (1, 2, 3), "Worlr")
  #                              ^^^^^^^^^
  #                              |
  #                              `format` supports argument stringification
#+end_src

#+RESULTS:
: ??? ??? some random text hello
: VAL1 Some values VAL2
: (1, 2, 3) Hello (1, 2, 3), Worlr
